// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.35.1
// 	protoc        v3.21.12
// source: admin_menu.proto

package admin_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 菜单列表
type ReqMenuList struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Base     *ReqListBase `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	Key      string       `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`            // 菜单键名
	Path     string       `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`          //菜单路由
	Name     string       `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`          //菜单名称
	ParentId int32        `protobuf:"varint,5,opt,name=parentId,proto3" json:"parentId,omitempty"` // 父级菜单
}

func (x *ReqMenuList) Reset() {
	*x = ReqMenuList{}
	mi := &file_admin_menu_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqMenuList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMenuList) ProtoMessage() {}

func (x *ReqMenuList) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMenuList.ProtoReflect.Descriptor instead.
func (*ReqMenuList) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{0}
}

func (x *ReqMenuList) GetBase() *ReqListBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ReqMenuList) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ReqMenuList) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ReqMenuList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqMenuList) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

type RespMenuListData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Total int64       `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List  []*MenuItem `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RespMenuListData) Reset() {
	*x = RespMenuListData{}
	mi := &file_admin_menu_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespMenuListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespMenuListData) ProtoMessage() {}

func (x *RespMenuListData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespMenuListData.ProtoReflect.Descriptor instead.
func (*RespMenuListData) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{1}
}

func (x *RespMenuListData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RespMenuListData) GetList() []*MenuItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 创建菜单
type ReqMenuAdd struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key                string `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`                                // 菜单键名
	Path               string `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"`                              //菜单路由
	Name               string `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"`                              //菜单名称
	ParentId           int32  `protobuf:"varint,4,opt,name=parentId,proto3" json:"parentId,omitempty"`                     // 父级菜单
	Describe           string `protobuf:"bytes,5,opt,name=describe,proto3" json:"describe,omitempty"`                      //菜单描述
	Redirect           string `protobuf:"bytes,6,opt,name=redirect,proto3" json:"redirect,omitempty"`                      //菜单重定向路由
	Icon               string `protobuf:"bytes,7,opt,name=icon,proto3" json:"icon,omitempty"`                              //菜单图标
	HideChildrenInMenu bool   `protobuf:"varint,8,opt,name=hideChildrenInMenu,proto3" json:"hideChildrenInMenu,omitempty"` //是否隐藏子菜单
	HideInMenu         bool   `protobuf:"varint,9,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`                 //是否隐藏菜单
	Enabled            bool   `protobuf:"varint,10,opt,name=enabled,proto3" json:"enabled,omitempty"`                      //是否启用菜单
	Sort               int32  `protobuf:"varint,11,opt,name=sort,proto3" json:"sort,omitempty"`                            //菜单排序值
	Component          string `protobuf:"bytes,12,opt,name=component,proto3" json:"component,omitempty"`                   //菜单组件
}

func (x *ReqMenuAdd) Reset() {
	*x = ReqMenuAdd{}
	mi := &file_admin_menu_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqMenuAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMenuAdd) ProtoMessage() {}

func (x *ReqMenuAdd) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMenuAdd.ProtoReflect.Descriptor instead.
func (*ReqMenuAdd) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{2}
}

func (x *ReqMenuAdd) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ReqMenuAdd) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ReqMenuAdd) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqMenuAdd) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ReqMenuAdd) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *ReqMenuAdd) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *ReqMenuAdd) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ReqMenuAdd) GetHideChildrenInMenu() bool {
	if x != nil {
		return x.HideChildrenInMenu
	}
	return false
}

func (x *ReqMenuAdd) GetHideInMenu() bool {
	if x != nil {
		return x.HideInMenu
	}
	return false
}

func (x *ReqMenuAdd) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ReqMenuAdd) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ReqMenuAdd) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

type RespMenuAddData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RespMenuAddData) Reset() {
	*x = RespMenuAddData{}
	mi := &file_admin_menu_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespMenuAddData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespMenuAddData) ProtoMessage() {}

func (x *RespMenuAddData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespMenuAddData.ProtoReflect.Descriptor instead.
func (*RespMenuAddData) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{3}
}

// 菜单想去
type ReqMenuInfo struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId int32 `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"` //菜单ID
}

func (x *ReqMenuInfo) Reset() {
	*x = ReqMenuInfo{}
	mi := &file_admin_menu_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqMenuInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMenuInfo) ProtoMessage() {}

func (x *ReqMenuInfo) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMenuInfo.ProtoReflect.Descriptor instead.
func (*ReqMenuInfo) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{4}
}

func (x *ReqMenuInfo) GetMenuId() int32 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

type RespMenuInfoData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Data *MenuItem `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
}

func (x *RespMenuInfoData) Reset() {
	*x = RespMenuInfoData{}
	mi := &file_admin_menu_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespMenuInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespMenuInfoData) ProtoMessage() {}

func (x *RespMenuInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespMenuInfoData.ProtoReflect.Descriptor instead.
func (*RespMenuInfoData) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{5}
}

func (x *RespMenuInfoData) GetData() *MenuItem {
	if x != nil {
		return x.Data
	}
	return nil
}

// 便捷菜单
type ReqMenuEdit struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId             int32  `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"`                         //菜单ID
	Key                string `protobuf:"bytes,2,opt,name=key,proto3" json:"key,omitempty"`                                // 菜单键名
	Path               string `protobuf:"bytes,3,opt,name=path,proto3" json:"path,omitempty"`                              //菜单路由
	Name               string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`                              //菜单名称
	ParentId           int32  `protobuf:"varint,5,opt,name=parentId,proto3" json:"parentId,omitempty"`                     // 父级菜单
	Describe           string `protobuf:"bytes,6,opt,name=describe,proto3" json:"describe,omitempty"`                      //菜单描述
	Redirect           string `protobuf:"bytes,7,opt,name=redirect,proto3" json:"redirect,omitempty"`                      //菜单重定向路由
	Icon               string `protobuf:"bytes,8,opt,name=icon,proto3" json:"icon,omitempty"`                              //菜单图标
	HideChildrenInMenu bool   `protobuf:"varint,9,opt,name=hideChildrenInMenu,proto3" json:"hideChildrenInMenu,omitempty"` //是否隐藏子菜单
	HideInMenu         bool   `protobuf:"varint,10,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`                //是否隐藏菜单
	Enabled            bool   `protobuf:"varint,11,opt,name=enabled,proto3" json:"enabled,omitempty"`                      //是否启用菜单
	Sort               int32  `protobuf:"varint,12,opt,name=sort,proto3" json:"sort,omitempty"`                            //菜单排序值
	Component          string `protobuf:"bytes,13,opt,name=component,proto3" json:"component,omitempty"`                   //菜单组件
}

func (x *ReqMenuEdit) Reset() {
	*x = ReqMenuEdit{}
	mi := &file_admin_menu_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqMenuEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMenuEdit) ProtoMessage() {}

func (x *ReqMenuEdit) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMenuEdit.ProtoReflect.Descriptor instead.
func (*ReqMenuEdit) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{6}
}

func (x *ReqMenuEdit) GetMenuId() int32 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *ReqMenuEdit) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ReqMenuEdit) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *ReqMenuEdit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqMenuEdit) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *ReqMenuEdit) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *ReqMenuEdit) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *ReqMenuEdit) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *ReqMenuEdit) GetHideChildrenInMenu() bool {
	if x != nil {
		return x.HideChildrenInMenu
	}
	return false
}

func (x *ReqMenuEdit) GetHideInMenu() bool {
	if x != nil {
		return x.HideInMenu
	}
	return false
}

func (x *ReqMenuEdit) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *ReqMenuEdit) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *ReqMenuEdit) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

type RespMenuEditData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RespMenuEditData) Reset() {
	*x = RespMenuEditData{}
	mi := &file_admin_menu_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespMenuEditData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespMenuEditData) ProtoMessage() {}

func (x *RespMenuEditData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespMenuEditData.ProtoReflect.Descriptor instead.
func (*RespMenuEditData) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{7}
}

// 启用禁用菜单
type ReqMenuEnable struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId  int32 `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"`   //菜单ID
	Enabled bool  `protobuf:"varint,2,opt,name=enabled,proto3" json:"enabled,omitempty"` //是否启用菜单
}

func (x *ReqMenuEnable) Reset() {
	*x = ReqMenuEnable{}
	mi := &file_admin_menu_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqMenuEnable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMenuEnable) ProtoMessage() {}

func (x *ReqMenuEnable) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMenuEnable.ProtoReflect.Descriptor instead.
func (*ReqMenuEnable) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{8}
}

func (x *ReqMenuEnable) GetMenuId() int32 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *ReqMenuEnable) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type RespMenuEnableData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RespMenuEnableData) Reset() {
	*x = RespMenuEnableData{}
	mi := &file_admin_menu_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespMenuEnableData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespMenuEnableData) ProtoMessage() {}

func (x *RespMenuEnableData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespMenuEnableData.ProtoReflect.Descriptor instead.
func (*RespMenuEnableData) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{9}
}

// 删除菜单
type ReqMenuDelete struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId int32 `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"` //菜单ID
}

func (x *ReqMenuDelete) Reset() {
	*x = ReqMenuDelete{}
	mi := &file_admin_menu_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqMenuDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMenuDelete) ProtoMessage() {}

func (x *ReqMenuDelete) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMenuDelete.ProtoReflect.Descriptor instead.
func (*ReqMenuDelete) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{10}
}

func (x *ReqMenuDelete) GetMenuId() int32 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

type RespMenuDeleteData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *RespMenuDeleteData) Reset() {
	*x = RespMenuDeleteData{}
	mi := &file_admin_menu_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespMenuDeleteData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespMenuDeleteData) ProtoMessage() {}

func (x *RespMenuDeleteData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespMenuDeleteData.ProtoReflect.Descriptor instead.
func (*RespMenuDeleteData) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{11}
}

// 菜单权限列表
type ReqMenuPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	MenuId int32 `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty"` //菜单ID
}

func (x *ReqMenuPermissions) Reset() {
	*x = ReqMenuPermissions{}
	mi := &file_admin_menu_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqMenuPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMenuPermissions) ProtoMessage() {}

func (x *ReqMenuPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMenuPermissions.ProtoReflect.Descriptor instead.
func (*ReqMenuPermissions) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{12}
}

func (x *ReqMenuPermissions) GetMenuId() int32 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

type RespMenuPermissionsData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	List []*MenuPermissions `protobuf:"bytes,1,rep,name=list,proto3" json:"list,omitempty"`
}

func (x *RespMenuPermissionsData) Reset() {
	*x = RespMenuPermissionsData{}
	mi := &file_admin_menu_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespMenuPermissionsData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespMenuPermissionsData) ProtoMessage() {}

func (x *RespMenuPermissionsData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespMenuPermissionsData.ProtoReflect.Descriptor instead.
func (*RespMenuPermissionsData) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{13}
}

func (x *RespMenuPermissionsData) GetList() []*MenuPermissions {
	if x != nil {
		return x.List
	}
	return nil
}

// 页面菜单列表
type ReqMenuPages struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	All bool `protobuf:"varint,1,opt,name=all,proto3" json:"all,omitempty"` //是否顶部插入全部
}

func (x *ReqMenuPages) Reset() {
	*x = ReqMenuPages{}
	mi := &file_admin_menu_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqMenuPages) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMenuPages) ProtoMessage() {}

func (x *ReqMenuPages) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMenuPages.ProtoReflect.Descriptor instead.
func (*ReqMenuPages) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{14}
}

func (x *ReqMenuPages) GetAll() bool {
	if x != nil {
		return x.All
	}
	return false
}

// 页面模块权限列表
type ReqMenuMode struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields
}

func (x *ReqMenuMode) Reset() {
	*x = ReqMenuMode{}
	mi := &file_admin_menu_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqMenuMode) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqMenuMode) ProtoMessage() {}

func (x *ReqMenuMode) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqMenuMode.ProtoReflect.Descriptor instead.
func (*ReqMenuMode) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{15}
}

type RespMenuModeData struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Modes []*MenuModeItem `protobuf:"bytes,1,rep,name=modes,proto3" json:"modes,omitempty"`
}

func (x *RespMenuModeData) Reset() {
	*x = RespMenuModeData{}
	mi := &file_admin_menu_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespMenuModeData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespMenuModeData) ProtoMessage() {}

func (x *RespMenuModeData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespMenuModeData.ProtoReflect.Descriptor instead.
func (*RespMenuModeData) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{16}
}

func (x *RespMenuModeData) GetModes() []*MenuModeItem {
	if x != nil {
		return x.Modes
	}
	return nil
}

// ////////////////////////////////
// 菜单
type MenuItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Key                string      `protobuf:"bytes,1,opt,name=key,proto3" json:"key,omitempty"`   // 菜单唯一键
	Path               string      `protobuf:"bytes,2,opt,name=path,proto3" json:"path,omitempty"` // 菜单路由
	Name               string      `protobuf:"bytes,3,opt,name=name,proto3" json:"name,omitempty"` // 菜单名称
	Icon               string      `protobuf:"bytes,4,opt,name=icon,proto3" json:"icon,omitempty"` // 菜单图标
	Component          string      `protobuf:"bytes,5,opt,name=component,proto3" json:"component,omitempty"`
	Authority          string      `protobuf:"bytes,6,opt,name=authority,proto3" json:"authority,omitempty"`
	HideInMenu         bool        `protobuf:"varint,7,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`
	HideChildrenInMenu bool        `protobuf:"varint,8,opt,name=hideChildrenInMenu,proto3" json:"hideChildrenInMenu,omitempty"`
	Routes             []*MenuItem `protobuf:"bytes,9,rep,name=routes,proto3" json:"routes,omitempty"`
}

func (x *MenuItem) Reset() {
	*x = MenuItem{}
	mi := &file_admin_menu_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MenuItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuItem) ProtoMessage() {}

func (x *MenuItem) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuItem.ProtoReflect.Descriptor instead.
func (*MenuItem) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{17}
}

func (x *MenuItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MenuItem) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MenuItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuItem) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuItem) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *MenuItem) GetAuthority() string {
	if x != nil {
		return x.Authority
	}
	return ""
}

func (x *MenuItem) GetHideInMenu() bool {
	if x != nil {
		return x.HideInMenu
	}
	return false
}

func (x *MenuItem) GetHideChildrenInMenu() bool {
	if x != nil {
		return x.HideChildrenInMenu
	}
	return false
}

func (x *MenuItem) GetRoutes() []*MenuItem {
	if x != nil {
		return x.Routes
	}
	return nil
}

// 有效菜单树
type MenuTreeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	// 菜单层级
	Level int32 `protobuf:"varint,1,opt,name=level,proto3" json:"level,omitempty"`
	// 菜单自增ID
	Id int32 `protobuf:"varint,2,opt,name=id,proto3" json:"id,omitempty"`
	// 菜单唯一键
	Key string `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`
	// 菜单名称
	Name string `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`
	// 父级菜单ID
	ParentId int32 `protobuf:"varint,5,opt,name=parentId,proto3" json:"parentId,omitempty"`
	// 菜单描述
	Describe string `protobuf:"bytes,6,opt,name=describe,proto3" json:"describe,omitempty"`
	// 菜单路径
	Path string `protobuf:"bytes,7,opt,name=path,proto3" json:"path,omitempty"`
	// 重定向地址
	Redirect string `protobuf:"bytes,8,opt,name=redirect,proto3" json:"redirect,omitempty"`
	// 组件名称
	Component string `protobuf:"bytes,9,opt,name=component,proto3" json:"component,omitempty"`
	// 菜单排序
	Sort int32 `protobuf:"varint,10,opt,name=sort,proto3" json:"sort,omitempty"`
	// 菜单图标
	Icon string `protobuf:"bytes,11,opt,name=icon,proto3" json:"icon,omitempty"`
	// 是否在菜单中隐藏子菜单
	HideChildrenInMenu bool `protobuf:"varint,12,opt,name=hideChildrenInMenu,proto3" json:"hideChildrenInMenu,omitempty"`
	// 是否隐藏菜单
	HideInMenu bool `protobuf:"varint,13,opt,name=hideInMenu,proto3" json:"hideInMenu,omitempty"`
	// 是否启用
	Enabled    bool            `protobuf:"varint,14,opt,name=enabled,proto3" json:"enabled,omitempty"`
	CreateTime int64           `protobuf:"varint,15,opt,name=createTime,proto3" json:"createTime,omitempty"`
	ModifyTime int64           `protobuf:"varint,16,opt,name=modifyTime,proto3" json:"modifyTime,omitempty"`
	Children   []*MenuTreeItem `protobuf:"bytes,17,rep,name=children,proto3" json:"children,omitempty"`
}

func (x *MenuTreeItem) Reset() {
	*x = MenuTreeItem{}
	mi := &file_admin_menu_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MenuTreeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuTreeItem) ProtoMessage() {}

func (x *MenuTreeItem) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuTreeItem.ProtoReflect.Descriptor instead.
func (*MenuTreeItem) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{18}
}

func (x *MenuTreeItem) GetLevel() int32 {
	if x != nil {
		return x.Level
	}
	return 0
}

func (x *MenuTreeItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *MenuTreeItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *MenuTreeItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *MenuTreeItem) GetParentId() int32 {
	if x != nil {
		return x.ParentId
	}
	return 0
}

func (x *MenuTreeItem) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *MenuTreeItem) GetPath() string {
	if x != nil {
		return x.Path
	}
	return ""
}

func (x *MenuTreeItem) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *MenuTreeItem) GetComponent() string {
	if x != nil {
		return x.Component
	}
	return ""
}

func (x *MenuTreeItem) GetSort() int32 {
	if x != nil {
		return x.Sort
	}
	return 0
}

func (x *MenuTreeItem) GetIcon() string {
	if x != nil {
		return x.Icon
	}
	return ""
}

func (x *MenuTreeItem) GetHideChildrenInMenu() bool {
	if x != nil {
		return x.HideChildrenInMenu
	}
	return false
}

func (x *MenuTreeItem) GetHideInMenu() bool {
	if x != nil {
		return x.HideInMenu
	}
	return false
}

func (x *MenuTreeItem) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *MenuTreeItem) GetCreateTime() int64 {
	if x != nil {
		return x.CreateTime
	}
	return 0
}

func (x *MenuTreeItem) GetModifyTime() int64 {
	if x != nil {
		return x.ModifyTime
	}
	return 0
}

func (x *MenuTreeItem) GetChildren() []*MenuTreeItem {
	if x != nil {
		return x.Children
	}
	return nil
}

// 菜单权限
type MenuPermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	Menu        *MenuTreeItem        `protobuf:"bytes,1,opt,name=menu,proto3" json:"menu,omitempty"`
	Permissions []*PermissionApiItem `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty"`
}

func (x *MenuPermissions) Reset() {
	*x = MenuPermissions{}
	mi := &file_admin_menu_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MenuPermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuPermissions) ProtoMessage() {}

func (x *MenuPermissions) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuPermissions.ProtoReflect.Descriptor instead.
func (*MenuPermissions) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{19}
}

func (x *MenuPermissions) GetMenu() *MenuTreeItem {
	if x != nil {
		return x.Menu
	}
	return nil
}

func (x *MenuPermissions) GetPermissions() []*PermissionApiItem {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// 菜单模块
type MenuModeItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	ModelId   int32           `protobuf:"varint,1,opt,name=modelId,proto3" json:"modelId,omitempty"`    //模块菜单ID
	ModelName string          `protobuf:"bytes,2,opt,name=modelName,proto3" json:"modelName,omitempty"` //模块菜单名称
	Pages     []*MenuPageItem `protobuf:"bytes,3,rep,name=pages,proto3" json:"pages,omitempty"`         //模块下面的页面列表
}

func (x *MenuModeItem) Reset() {
	*x = MenuModeItem{}
	mi := &file_admin_menu_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MenuModeItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuModeItem) ProtoMessage() {}

func (x *MenuModeItem) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuModeItem.ProtoReflect.Descriptor instead.
func (*MenuModeItem) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{20}
}

func (x *MenuModeItem) GetModelId() int32 {
	if x != nil {
		return x.ModelId
	}
	return 0
}

func (x *MenuModeItem) GetModelName() string {
	if x != nil {
		return x.ModelName
	}
	return ""
}

func (x *MenuModeItem) GetPages() []*MenuPageItem {
	if x != nil {
		return x.Pages
	}
	return nil
}

// 模块页面
type MenuPageItem struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PageId      int32                  `protobuf:"varint,1,opt,name=pageId,proto3" json:"pageId,omitempty"`          //页面菜单ID
	PageName    string                 `protobuf:"bytes,2,opt,name=pageName,proto3" json:"pageName,omitempty"`       //页面菜单名称
	Permissions []*MenuPagePermissions `protobuf:"bytes,3,rep,name=permissions,proto3" json:"permissions,omitempty"` //页面菜单权限
}

func (x *MenuPageItem) Reset() {
	*x = MenuPageItem{}
	mi := &file_admin_menu_proto_msgTypes[21]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MenuPageItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuPageItem) ProtoMessage() {}

func (x *MenuPageItem) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[21]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuPageItem.ProtoReflect.Descriptor instead.
func (*MenuPageItem) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{21}
}

func (x *MenuPageItem) GetPageId() int32 {
	if x != nil {
		return x.PageId
	}
	return 0
}

func (x *MenuPageItem) GetPageName() string {
	if x != nil {
		return x.PageName
	}
	return ""
}

func (x *MenuPageItem) GetPermissions() []*MenuPagePermissions {
	if x != nil {
		return x.Permissions
	}
	return nil
}

// 模块页面权限
type MenuPagePermissions struct {
	state         protoimpl.MessageState
	sizeCache     protoimpl.SizeCache
	unknownFields protoimpl.UnknownFields

	PermissionId       int32  `protobuf:"varint,1,opt,name=permissionId,proto3" json:"permissionId,omitempty"`            //权限ID
	PermissionName     string `protobuf:"bytes,2,opt,name=permissionName,proto3" json:"permissionName,omitempty"`         //权限名称
	PermissionType     string `protobuf:"bytes,3,opt,name=permissionType,proto3" json:"permissionType,omitempty"`         //权限类型
	PermissionTypeName string `protobuf:"bytes,4,opt,name=permissionTypeName,proto3" json:"permissionTypeName,omitempty"` //权限类型名称
}

func (x *MenuPagePermissions) Reset() {
	*x = MenuPagePermissions{}
	mi := &file_admin_menu_proto_msgTypes[22]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *MenuPagePermissions) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*MenuPagePermissions) ProtoMessage() {}

func (x *MenuPagePermissions) ProtoReflect() protoreflect.Message {
	mi := &file_admin_menu_proto_msgTypes[22]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use MenuPagePermissions.ProtoReflect.Descriptor instead.
func (*MenuPagePermissions) Descriptor() ([]byte, []int) {
	return file_admin_menu_proto_rawDescGZIP(), []int{22}
}

func (x *MenuPagePermissions) GetPermissionId() int32 {
	if x != nil {
		return x.PermissionId
	}
	return 0
}

func (x *MenuPagePermissions) GetPermissionName() string {
	if x != nil {
		return x.PermissionName
	}
	return ""
}

func (x *MenuPagePermissions) GetPermissionType() string {
	if x != nil {
		return x.PermissionType
	}
	return ""
}

func (x *MenuPagePermissions) GetPermissionTypeName() string {
	if x != nil {
		return x.PermissionTypeName
	}
	return ""
}

var File_admin_menu_proto protoreflect.FileDescriptor

var file_admin_menu_proto_rawDesc = []byte{
	0x0a, 0x10, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x6d, 0x65, 0x6e, 0x75, 0x2e, 0x70, 0x72, 0x6f,
	0x74, 0x6f, 0x12, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x1a, 0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f,
	0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x1a, 0x16, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22,
	0x8b, 0x01, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x12,
	0x26, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e,
	0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x73,
	0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d,
	0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x22, 0x4d, 0x0a,
	0x10, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x23, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4d, 0x65,
	0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xca, 0x02, 0x0a,
	0x0a, 0x52, 0x65, 0x71, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x64, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b,
	0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a,
	0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74,
	0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x18, 0x04, 0x20, 0x01, 0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49,
	0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x05, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1a, 0x0a,
	0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f,
	0x6e, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x2e, 0x0a,
	0x12, 0x68, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49, 0x6e, 0x4d,
	0x65, 0x6e, 0x75, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x68, 0x69, 0x64, 0x65, 0x43,
	0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1e, 0x0a,
	0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x09, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x18, 0x0a,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07,
	0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63,
	0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x22, 0x11, 0x0a, 0x0f, 0x52, 0x65, 0x73,
	0x70, 0x4d, 0x65, 0x6e, 0x75, 0x41, 0x64, 0x64, 0x44, 0x61, 0x74, 0x61, 0x22, 0x25, 0x0a, 0x0b,
	0x52, 0x65, 0x71, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x16, 0x0a, 0x06, 0x6d,
	0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x6e,
	0x75, 0x49, 0x64, 0x22, 0x37, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x49,
	0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x23, 0x0a, 0x04, 0x64, 0x61, 0x74, 0x61, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4d, 0x65,
	0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xe3, 0x02, 0x0a,
	0x0b, 0x52, 0x65, 0x71, 0x4d, 0x65, 0x6e, 0x75, 0x45, 0x64, 0x69, 0x74, 0x12, 0x16, 0x0a, 0x06,
	0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65,
	0x6e, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x02, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65,
	0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65,
	0x63, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x69, 0x64, 0x65, 0x43, 0x68,
	0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x09, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x12, 0x68, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e,
	0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e,
	0x4d, 0x65, 0x6e, 0x75, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a, 0x68, 0x69, 0x64, 0x65,
	0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x64, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x05, 0x52, 0x04,
	0x73, 0x6f, 0x72, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e,
	0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65,
	0x6e, 0x74, 0x22, 0x12, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x45, 0x64,
	0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x41, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x4d, 0x65, 0x6e,
	0x75, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49,
	0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12,
	0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x73,
	0x70, 0x4d, 0x65, 0x6e, 0x75, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22,
	0x27, 0x0a, 0x0d, 0x52, 0x65, 0x71, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x22, 0x14, 0x0a, 0x12, 0x52, 0x65, 0x73, 0x70,
	0x4d, 0x65, 0x6e, 0x75, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74, 0x61, 0x22, 0x2c,
	0x0a, 0x12, 0x52, 0x65, 0x71, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x01,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x22, 0x45, 0x0a, 0x17,
	0x52, 0x65, 0x73, 0x70, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x73, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2a, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x16, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4d, 0x65,
	0x6e, 0x75, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x04, 0x6c,
	0x69, 0x73, 0x74, 0x22, 0x20, 0x0a, 0x0c, 0x52, 0x65, 0x71, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x61,
	0x67, 0x65, 0x73, 0x12, 0x10, 0x0a, 0x03, 0x61, 0x6c, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x08,
	0x52, 0x03, 0x61, 0x6c, 0x6c, 0x22, 0x0d, 0x0a, 0x0b, 0x52, 0x65, 0x71, 0x4d, 0x65, 0x6e, 0x75,
	0x4d, 0x6f, 0x64, 0x65, 0x22, 0x3d, 0x0a, 0x10, 0x52, 0x65, 0x73, 0x70, 0x4d, 0x65, 0x6e, 0x75,
	0x4d, 0x6f, 0x64, 0x65, 0x44, 0x61, 0x74, 0x61, 0x12, 0x29, 0x0a, 0x05, 0x6d, 0x6f, 0x64, 0x65,
	0x73, 0x18, 0x01, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e,
	0x4d, 0x65, 0x6e, 0x75, 0x4d, 0x6f, 0x64, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x6d, 0x6f,
	0x64, 0x65, 0x73, 0x22, 0x8d, 0x02, 0x0a, 0x08, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x01, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x03,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x1c,
	0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x05, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d, 0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x1c, 0x0a, 0x09,
	0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x61, 0x75, 0x74, 0x68, 0x6f, 0x72, 0x69, 0x74, 0x79, 0x12, 0x1e, 0x0a, 0x0a, 0x68, 0x69,
	0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x07, 0x20, 0x01, 0x28, 0x08, 0x52, 0x0a,
	0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x2e, 0x0a, 0x12, 0x68, 0x69,
	0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75,
	0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x68, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x27, 0x0a, 0x06, 0x72, 0x6f,
	0x75, 0x74, 0x65, 0x73, 0x18, 0x09, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x0f, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x06, 0x72, 0x6f, 0x75,
	0x74, 0x65, 0x73, 0x22, 0xe3, 0x03, 0x0a, 0x0c, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65,
	0x49, 0x74, 0x65, 0x6d, 0x12, 0x14, 0x0a, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x05, 0x6c, 0x65, 0x76, 0x65, 0x6c, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x08, 0x70, 0x61, 0x72, 0x65, 0x6e, 0x74, 0x49, 0x64, 0x12, 0x1a, 0x0a, 0x08,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x70, 0x61, 0x74, 0x68,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x70, 0x61, 0x74, 0x68, 0x12, 0x1a, 0x0a, 0x08,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08,
	0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x63, 0x6f, 0x6d, 0x70,
	0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x6f, 0x6d,
	0x70, 0x6f, 0x6e, 0x65, 0x6e, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x18, 0x0a,
	0x20, 0x01, 0x28, 0x05, 0x52, 0x04, 0x73, 0x6f, 0x72, 0x74, 0x12, 0x12, 0x0a, 0x04, 0x69, 0x63,
	0x6f, 0x6e, 0x18, 0x0b, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x69, 0x63, 0x6f, 0x6e, 0x12, 0x2e,
	0x0a, 0x12, 0x68, 0x69, 0x64, 0x65, 0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49, 0x6e,
	0x4d, 0x65, 0x6e, 0x75, 0x18, 0x0c, 0x20, 0x01, 0x28, 0x08, 0x52, 0x12, 0x68, 0x69, 0x64, 0x65,
	0x43, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x1e,
	0x0a, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x18, 0x0d, 0x20, 0x01,
	0x28, 0x08, 0x52, 0x0a, 0x68, 0x69, 0x64, 0x65, 0x49, 0x6e, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x18,
	0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x08, 0x52,
	0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1e, 0x0a, 0x0a, 0x63, 0x72, 0x65, 0x61,
	0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x0f, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x63, 0x72,
	0x65, 0x61, 0x74, 0x65, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x1e, 0x0a, 0x0a, 0x6d, 0x6f, 0x64, 0x69,
	0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x18, 0x10, 0x20, 0x01, 0x28, 0x03, 0x52, 0x0a, 0x6d, 0x6f,
	0x64, 0x69, 0x66, 0x79, 0x54, 0x69, 0x6d, 0x65, 0x12, 0x2f, 0x0a, 0x08, 0x63, 0x68, 0x69, 0x6c,
	0x64, 0x72, 0x65, 0x6e, 0x18, 0x11, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x08, 0x63, 0x68, 0x69, 0x6c, 0x64, 0x72, 0x65, 0x6e, 0x22, 0x76, 0x0a, 0x0f, 0x4d, 0x65, 0x6e,
	0x75, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12, 0x27, 0x0a, 0x04,
	0x6d, 0x65, 0x6e, 0x75, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x54, 0x72, 0x65, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52,
	0x04, 0x6d, 0x65, 0x6e, 0x75, 0x12, 0x3a, 0x0a, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x18, 0x2e, 0x61, 0x64, 0x6d,
	0x69, 0x6e, 0x2e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x69,
	0x49, 0x74, 0x65, 0x6d, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e,
	0x73, 0x22, 0x71, 0x0a, 0x0c, 0x4d, 0x65, 0x6e, 0x75, 0x4d, 0x6f, 0x64, 0x65, 0x49, 0x74, 0x65,
	0x6d, 0x12, 0x18, 0x0a, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x07, 0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x49, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x6d,
	0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09,
	0x6d, 0x6f, 0x64, 0x65, 0x6c, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x29, 0x0a, 0x05, 0x70, 0x61, 0x67,
	0x65, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e,
	0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x67, 0x65, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x05, 0x70,
	0x61, 0x67, 0x65, 0x73, 0x22, 0x80, 0x01, 0x0a, 0x0c, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x67,
	0x65, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x16, 0x0a, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x70, 0x61, 0x67, 0x65, 0x49, 0x64, 0x12, 0x1a, 0x0a,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x08, 0x70, 0x61, 0x67, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x3c, 0x0a, 0x0b, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x03, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x1a,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x4d, 0x65, 0x6e, 0x75, 0x50, 0x61, 0x67, 0x65, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d,
	0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0xb9, 0x01, 0x0a, 0x13, 0x4d, 0x65, 0x6e, 0x75,
	0x50, 0x61, 0x67, 0x65, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x26, 0x0a, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x02, 0x20, 0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x26, 0x0a, 0x0e, 0x70,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x18, 0x03, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x0e, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54,
	0x79, 0x70, 0x65, 0x12, 0x2e, 0x0a, 0x12, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x54, 0x79, 0x70, 0x65, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x12, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x54, 0x79, 0x70, 0x65, 0x4e,
	0x61, 0x6d, 0x65, 0x42, 0x1b, 0x5a, 0x19, 0x2e, 0x2f, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x70,
	0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f,
	0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_menu_proto_rawDescOnce sync.Once
	file_admin_menu_proto_rawDescData = file_admin_menu_proto_rawDesc
)

func file_admin_menu_proto_rawDescGZIP() []byte {
	file_admin_menu_proto_rawDescOnce.Do(func() {
		file_admin_menu_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_menu_proto_rawDescData)
	})
	return file_admin_menu_proto_rawDescData
}

var file_admin_menu_proto_msgTypes = make([]protoimpl.MessageInfo, 23)
var file_admin_menu_proto_goTypes = []any{
	(*ReqMenuList)(nil),             // 0: admin.ReqMenuList
	(*RespMenuListData)(nil),        // 1: admin.RespMenuListData
	(*ReqMenuAdd)(nil),              // 2: admin.ReqMenuAdd
	(*RespMenuAddData)(nil),         // 3: admin.RespMenuAddData
	(*ReqMenuInfo)(nil),             // 4: admin.ReqMenuInfo
	(*RespMenuInfoData)(nil),        // 5: admin.RespMenuInfoData
	(*ReqMenuEdit)(nil),             // 6: admin.ReqMenuEdit
	(*RespMenuEditData)(nil),        // 7: admin.RespMenuEditData
	(*ReqMenuEnable)(nil),           // 8: admin.ReqMenuEnable
	(*RespMenuEnableData)(nil),      // 9: admin.RespMenuEnableData
	(*ReqMenuDelete)(nil),           // 10: admin.ReqMenuDelete
	(*RespMenuDeleteData)(nil),      // 11: admin.RespMenuDeleteData
	(*ReqMenuPermissions)(nil),      // 12: admin.ReqMenuPermissions
	(*RespMenuPermissionsData)(nil), // 13: admin.RespMenuPermissionsData
	(*ReqMenuPages)(nil),            // 14: admin.ReqMenuPages
	(*ReqMenuMode)(nil),             // 15: admin.ReqMenuMode
	(*RespMenuModeData)(nil),        // 16: admin.RespMenuModeData
	(*MenuItem)(nil),                // 17: admin.MenuItem
	(*MenuTreeItem)(nil),            // 18: admin.MenuTreeItem
	(*MenuPermissions)(nil),         // 19: admin.MenuPermissions
	(*MenuModeItem)(nil),            // 20: admin.MenuModeItem
	(*MenuPageItem)(nil),            // 21: admin.MenuPageItem
	(*MenuPagePermissions)(nil),     // 22: admin.MenuPagePermissions
	(*ReqListBase)(nil),             // 23: admin.ReqListBase
	(*PermissionApiItem)(nil),       // 24: admin.PermissionApiItem
}
var file_admin_menu_proto_depIdxs = []int32{
	23, // 0: admin.ReqMenuList.base:type_name -> admin.ReqListBase
	17, // 1: admin.RespMenuListData.list:type_name -> admin.MenuItem
	17, // 2: admin.RespMenuInfoData.data:type_name -> admin.MenuItem
	19, // 3: admin.RespMenuPermissionsData.list:type_name -> admin.MenuPermissions
	20, // 4: admin.RespMenuModeData.modes:type_name -> admin.MenuModeItem
	17, // 5: admin.MenuItem.routes:type_name -> admin.MenuItem
	18, // 6: admin.MenuTreeItem.children:type_name -> admin.MenuTreeItem
	18, // 7: admin.MenuPermissions.menu:type_name -> admin.MenuTreeItem
	24, // 8: admin.MenuPermissions.permissions:type_name -> admin.PermissionApiItem
	21, // 9: admin.MenuModeItem.pages:type_name -> admin.MenuPageItem
	22, // 10: admin.MenuPageItem.permissions:type_name -> admin.MenuPagePermissions
	11, // [11:11] is the sub-list for method output_type
	11, // [11:11] is the sub-list for method input_type
	11, // [11:11] is the sub-list for extension type_name
	11, // [11:11] is the sub-list for extension extendee
	0,  // [0:11] is the sub-list for field type_name
}

func init() { file_admin_menu_proto_init() }
func file_admin_menu_proto_init() {
	if File_admin_menu_proto != nil {
		return
	}
	file_common_proto_init()
	file_admin_permission_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_menu_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   23,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_admin_menu_proto_goTypes,
		DependencyIndexes: file_admin_menu_proto_depIdxs,
		MessageInfos:      file_admin_menu_proto_msgTypes,
	}.Build()
	File_admin_menu_proto = out.File
	file_admin_menu_proto_rawDesc = nil
	file_admin_menu_proto_goTypes = nil
	file_admin_menu_proto_depIdxs = nil
}
