// Code generated by protoc-gen-go. DO NOT EDIT.
// versions:
// 	protoc-gen-go v1.36.1
// 	protoc        v3.21.12
// source: admin_permission.proto

package admin_proto

import (
	protoreflect "google.golang.org/protobuf/reflect/protoreflect"
	protoimpl "google.golang.org/protobuf/runtime/protoimpl"
	reflect "reflect"
	sync "sync"
)

const (
	// Verify that this generated code is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(20 - protoimpl.MinVersion)
	// Verify that runtime/protoimpl is sufficiently up-to-date.
	_ = protoimpl.EnforceVersion(protoimpl.MaxVersion - 20)
)

// 权限列表
type ReqAdminPermissionList struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Base          *ReqListBase           `protobuf:"bytes,1,opt,name=base,proto3" json:"base,omitempty"`
	MenuId        int32                  `protobuf:"varint,2,opt,name=menuId,proto3" json:"menuId,omitempty"` //菜单ID
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`        //权限唯一标识符
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty"`      //权限名称
	Type          string                 `protobuf:"bytes,5,opt,name=type,proto3" json:"type,omitempty"`      //权限类型
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqAdminPermissionList) Reset() {
	*x = ReqAdminPermissionList{}
	mi := &file_admin_permission_proto_msgTypes[0]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqAdminPermissionList) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminPermissionList) ProtoMessage() {}

func (x *ReqAdminPermissionList) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[0]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminPermissionList.ProtoReflect.Descriptor instead.
func (*ReqAdminPermissionList) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{0}
}

func (x *ReqAdminPermissionList) GetBase() *ReqListBase {
	if x != nil {
		return x.Base
	}
	return nil
}

func (x *ReqAdminPermissionList) GetMenuId() int32 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *ReqAdminPermissionList) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ReqAdminPermissionList) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqAdminPermissionList) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

type RespAdminPermissionListData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Total         int64                  `protobuf:"varint,1,opt,name=total,proto3" json:"total,omitempty"`
	List          []*PermissionListItem  `protobuf:"bytes,2,rep,name=list,proto3" json:"list,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespAdminPermissionListData) Reset() {
	*x = RespAdminPermissionListData{}
	mi := &file_admin_permission_proto_msgTypes[1]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespAdminPermissionListData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminPermissionListData) ProtoMessage() {}

func (x *RespAdminPermissionListData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[1]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminPermissionListData.ProtoReflect.Descriptor instead.
func (*RespAdminPermissionListData) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{1}
}

func (x *RespAdminPermissionListData) GetTotal() int64 {
	if x != nil {
		return x.Total
	}
	return 0
}

func (x *RespAdminPermissionListData) GetList() []*PermissionListItem {
	if x != nil {
		return x.List
	}
	return nil
}

// 创建权限
type ReqAdminPermissionAdd struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" label:"权限ID" binding:"required,min=1"`            // @gotags:  label:"权限ID" binding:"required,min=1"
	MenuId        int32                  `protobuf:"varint,2,opt,name=menuId,proto3" json:"menuId,omitempty" label:"权限对应的菜单ID" binding:"required,min=1"`    // @gotags:  label:"权限对应的菜单ID" binding:"required,min=1"
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty" label:"权限唯一标识符" binding:"required,trimBlank"`           // @gotags:  label:"权限唯一标识符" binding:"required,trimBlank"
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" label:"权限名称" binding:"required,trimBlank"`         // @gotags:  label:"权限名称" binding:"required,trimBlank"
	Describe      string                 `protobuf:"bytes,5,opt,name=describe,proto3" json:"describe,omitempty" label:"权限描述" binding:"required,trimBlank"` // @gotags:  label:"权限描述" binding:"required,trimBlank"
	Type          string                 `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty" label:"权限类型" binding:"required,trimBlank"`         // @gotags:  label:"权限类型" binding:"required,trimBlank"
	Redirect      string                 `protobuf:"bytes,7,opt,name=redirect,proto3" json:"redirect,omitempty" label:"重定向地址"` // @gotags:  label:"重定向地址"
	Enabled       bool                   `protobuf:"varint,8,opt,name=enabled,proto3" json:"enabled,omitempty" label:"是否启用"`  // @gotags:  label:"是否启用"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqAdminPermissionAdd) Reset() {
	*x = ReqAdminPermissionAdd{}
	mi := &file_admin_permission_proto_msgTypes[2]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqAdminPermissionAdd) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminPermissionAdd) ProtoMessage() {}

func (x *ReqAdminPermissionAdd) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[2]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminPermissionAdd.ProtoReflect.Descriptor instead.
func (*ReqAdminPermissionAdd) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{2}
}

func (x *ReqAdminPermissionAdd) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqAdminPermissionAdd) GetMenuId() int32 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *ReqAdminPermissionAdd) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ReqAdminPermissionAdd) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqAdminPermissionAdd) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *ReqAdminPermissionAdd) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ReqAdminPermissionAdd) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *ReqAdminPermissionAdd) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type RespAdminPermissionAddData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespAdminPermissionAddData) Reset() {
	*x = RespAdminPermissionAddData{}
	mi := &file_admin_permission_proto_msgTypes[3]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespAdminPermissionAddData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminPermissionAddData) ProtoMessage() {}

func (x *RespAdminPermissionAddData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[3]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminPermissionAddData.ProtoReflect.Descriptor instead.
func (*RespAdminPermissionAddData) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{3}
}

// 权限详情
type ReqAdminPermissionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" label:"权限ID" binding:"required,min=1"` // @gotags:  label:"权限ID" binding:"required,min=1"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqAdminPermissionInfo) Reset() {
	*x = ReqAdminPermissionInfo{}
	mi := &file_admin_permission_proto_msgTypes[4]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqAdminPermissionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminPermissionInfo) ProtoMessage() {}

func (x *ReqAdminPermissionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[4]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminPermissionInfo.ProtoReflect.Descriptor instead.
func (*ReqAdminPermissionInfo) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{4}
}

func (x *ReqAdminPermissionInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RespAdminPermissionInfoData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Data          *AdminPermissionInfo   `protobuf:"bytes,1,opt,name=data,proto3" json:"data,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespAdminPermissionInfoData) Reset() {
	*x = RespAdminPermissionInfoData{}
	mi := &file_admin_permission_proto_msgTypes[5]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespAdminPermissionInfoData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminPermissionInfoData) ProtoMessage() {}

func (x *RespAdminPermissionInfoData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[5]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminPermissionInfoData.ProtoReflect.Descriptor instead.
func (*RespAdminPermissionInfoData) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{5}
}

func (x *RespAdminPermissionInfoData) GetData() *AdminPermissionInfo {
	if x != nil {
		return x.Data
	}
	return nil
}

// 编辑权限
type ReqAdminPermissionEdit struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" label:"权限ID" binding:"required,min=1"`            // @gotags:  label:"权限ID" binding:"required,min=1"
	MenuId        int32                  `protobuf:"varint,2,opt,name=menuId,proto3" json:"menuId,omitempty" label:"权限对应的菜单ID" binding:"required,min=1"`    // @gotags:  label:"权限对应的菜单ID" binding:"required,min=1"
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty" label:"权限唯一标识符" binding:"required,trimBlank"`           // @gotags:  label:"权限唯一标识符" binding:"required,trimBlank"
	Name          string                 `protobuf:"bytes,4,opt,name=name,proto3" json:"name,omitempty" label:"权限名称" binding:"required,trimBlank"`         // @gotags:  label:"权限名称" binding:"required,trimBlank"
	Describe      string                 `protobuf:"bytes,5,opt,name=describe,proto3" json:"describe,omitempty" label:"权限描述" binding:"required,trimBlank"` // @gotags:  label:"权限描述" binding:"required,trimBlank"
	Type          string                 `protobuf:"bytes,6,opt,name=type,proto3" json:"type,omitempty" label:"权限类型" binding:"required,trimBlank"`         // @gotags:  label:"权限类型" binding:"required,trimBlank"
	Redirect      string                 `protobuf:"bytes,7,opt,name=redirect,proto3" json:"redirect,omitempty" label:"重定向地址"` // @gotags:  label:"重定向地址"
	Enabled       bool                   `protobuf:"varint,8,opt,name=enabled,proto3" json:"enabled,omitempty" label:"启用状态"`  // @gotags:  label:"启用状态"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqAdminPermissionEdit) Reset() {
	*x = ReqAdminPermissionEdit{}
	mi := &file_admin_permission_proto_msgTypes[6]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqAdminPermissionEdit) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminPermissionEdit) ProtoMessage() {}

func (x *ReqAdminPermissionEdit) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[6]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminPermissionEdit.ProtoReflect.Descriptor instead.
func (*ReqAdminPermissionEdit) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{6}
}

func (x *ReqAdminPermissionEdit) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqAdminPermissionEdit) GetMenuId() int32 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *ReqAdminPermissionEdit) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *ReqAdminPermissionEdit) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *ReqAdminPermissionEdit) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *ReqAdminPermissionEdit) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *ReqAdminPermissionEdit) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *ReqAdminPermissionEdit) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

type RespAdminPermissionEditData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespAdminPermissionEditData) Reset() {
	*x = RespAdminPermissionEditData{}
	mi := &file_admin_permission_proto_msgTypes[7]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespAdminPermissionEditData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminPermissionEditData) ProtoMessage() {}

func (x *RespAdminPermissionEditData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[7]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminPermissionEditData.ProtoReflect.Descriptor instead.
func (*RespAdminPermissionEditData) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{7}
}

// 启用禁用权限
type ReqAdminPermissionEnable struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" label:"权限ID" binding:"required,min=1"`               // @gotags:  label:"权限ID" binding:"required,min=1"
	IsEnabled     bool                   `protobuf:"varint,2,opt,name=isEnabled,proto3" json:"isEnabled,omitempty" label:"启用状态"` // @gotags:  label:"启用状态"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqAdminPermissionEnable) Reset() {
	*x = ReqAdminPermissionEnable{}
	mi := &file_admin_permission_proto_msgTypes[8]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqAdminPermissionEnable) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminPermissionEnable) ProtoMessage() {}

func (x *ReqAdminPermissionEnable) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[8]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminPermissionEnable.ProtoReflect.Descriptor instead.
func (*ReqAdminPermissionEnable) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{8}
}

func (x *ReqAdminPermissionEnable) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *ReqAdminPermissionEnable) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

type RespAdminPermissionEnableData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespAdminPermissionEnableData) Reset() {
	*x = RespAdminPermissionEnableData{}
	mi := &file_admin_permission_proto_msgTypes[9]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespAdminPermissionEnableData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminPermissionEnableData) ProtoMessage() {}

func (x *RespAdminPermissionEnableData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[9]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminPermissionEnableData.ProtoReflect.Descriptor instead.
func (*RespAdminPermissionEnableData) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{9}
}

// 删除权限
type ReqAdminPermissionDelete struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty" label:"权限ID" binding:"required,min=1"` // @gotags:  label:"权限ID" binding:"required,min=1"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqAdminPermissionDelete) Reset() {
	*x = ReqAdminPermissionDelete{}
	mi := &file_admin_permission_proto_msgTypes[10]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqAdminPermissionDelete) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminPermissionDelete) ProtoMessage() {}

func (x *ReqAdminPermissionDelete) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[10]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminPermissionDelete.ProtoReflect.Descriptor instead.
func (*ReqAdminPermissionDelete) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{10}
}

func (x *ReqAdminPermissionDelete) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

type RespAdminPermissionDeleteData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespAdminPermissionDeleteData) Reset() {
	*x = RespAdminPermissionDeleteData{}
	mi := &file_admin_permission_proto_msgTypes[11]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespAdminPermissionDeleteData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminPermissionDeleteData) ProtoMessage() {}

func (x *RespAdminPermissionDeleteData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[11]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminPermissionDeleteData.ProtoReflect.Descriptor instead.
func (*RespAdminPermissionDeleteData) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{11}
}

// 权限绑定接口
type ReqAdminPermissionBindApis struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PermissionId  int32                  `protobuf:"varint,1,opt,name=permissionId,proto3" json:"permissionId,omitempty" label:"权限ID" binding:"required,min=1"` // @gotags:  label:"权限ID" binding:"required,min=1"
	ApiIds        []int32                `protobuf:"varint,2,rep,packed,name=apiIds,proto3" json:"apiIds,omitempty" label:"接口ID列表" binding:"required,min=1"`      // @gotags:  label:"接口ID列表" binding:"required,min=1"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqAdminPermissionBindApis) Reset() {
	*x = ReqAdminPermissionBindApis{}
	mi := &file_admin_permission_proto_msgTypes[12]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqAdminPermissionBindApis) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminPermissionBindApis) ProtoMessage() {}

func (x *ReqAdminPermissionBindApis) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[12]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminPermissionBindApis.ProtoReflect.Descriptor instead.
func (*ReqAdminPermissionBindApis) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{12}
}

func (x *ReqAdminPermissionBindApis) GetPermissionId() int32 {
	if x != nil {
		return x.PermissionId
	}
	return 0
}

func (x *ReqAdminPermissionBindApis) GetApiIds() []int32 {
	if x != nil {
		return x.ApiIds
	}
	return nil
}

type RespAdminPermissionBindApisData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespAdminPermissionBindApisData) Reset() {
	*x = RespAdminPermissionBindApisData{}
	mi := &file_admin_permission_proto_msgTypes[13]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespAdminPermissionBindApisData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminPermissionBindApisData) ProtoMessage() {}

func (x *RespAdminPermissionBindApisData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[13]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminPermissionBindApisData.ProtoReflect.Descriptor instead.
func (*RespAdminPermissionBindApisData) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{13}
}

// 权限绑定接口
type ReqAdminPermissionUnBindApi struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	PermissionId  int32                  `protobuf:"varint,1,opt,name=permissionId,proto3" json:"permissionId,omitempty" label:"权限ID" binding:"required,min=1"` // @gotags:  label:"权限ID" binding:"required,min=1"
	ApiId         int32                  `protobuf:"varint,2,opt,name=apiId,proto3" json:"apiId,omitempty" label:"接口ID" binding:"required,min=1"`               // @gotags:  label:"接口ID" binding:"required,min=1"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqAdminPermissionUnBindApi) Reset() {
	*x = ReqAdminPermissionUnBindApi{}
	mi := &file_admin_permission_proto_msgTypes[14]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqAdminPermissionUnBindApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminPermissionUnBindApi) ProtoMessage() {}

func (x *ReqAdminPermissionUnBindApi) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[14]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminPermissionUnBindApi.ProtoReflect.Descriptor instead.
func (*ReqAdminPermissionUnBindApi) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{14}
}

func (x *ReqAdminPermissionUnBindApi) GetPermissionId() int32 {
	if x != nil {
		return x.PermissionId
	}
	return 0
}

func (x *ReqAdminPermissionUnBindApi) GetApiId() int32 {
	if x != nil {
		return x.ApiId
	}
	return 0
}

type RespAdminPermissionUnBindApi struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespAdminPermissionUnBindApi) Reset() {
	*x = RespAdminPermissionUnBindApi{}
	mi := &file_admin_permission_proto_msgTypes[15]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespAdminPermissionUnBindApi) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminPermissionUnBindApi) ProtoMessage() {}

func (x *RespAdminPermissionUnBindApi) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[15]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminPermissionUnBindApi.ProtoReflect.Descriptor instead.
func (*RespAdminPermissionUnBindApi) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{15}
}

// 绑定权限菜单
type ReqAdminPermissionBindMenu struct {
	state         protoimpl.MessageState   `protogen:"open.v1"`
	MenuId        int32                    `protobuf:"varint,1,opt,name=menuId,proto3" json:"menuId,omitempty" label:"菜单ID" binding:"required,min=1"`          // @gotags:  label:"菜单ID" binding:"required,min=1"
	Permissions   []*ReqAdminPermissionAdd `protobuf:"bytes,2,rep,name=permissions,proto3" json:"permissions,omitempty" label:"权限ID列表" binding:"required,min=1"` // @gotags:  label:"权限ID列表" binding:"required,min=1"
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *ReqAdminPermissionBindMenu) Reset() {
	*x = ReqAdminPermissionBindMenu{}
	mi := &file_admin_permission_proto_msgTypes[16]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *ReqAdminPermissionBindMenu) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*ReqAdminPermissionBindMenu) ProtoMessage() {}

func (x *ReqAdminPermissionBindMenu) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[16]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use ReqAdminPermissionBindMenu.ProtoReflect.Descriptor instead.
func (*ReqAdminPermissionBindMenu) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{16}
}

func (x *ReqAdminPermissionBindMenu) GetMenuId() int32 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *ReqAdminPermissionBindMenu) GetPermissions() []*ReqAdminPermissionAdd {
	if x != nil {
		return x.Permissions
	}
	return nil
}

type RespAdminPermissionBindMenuData struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *RespAdminPermissionBindMenuData) Reset() {
	*x = RespAdminPermissionBindMenuData{}
	mi := &file_admin_permission_proto_msgTypes[17]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *RespAdminPermissionBindMenuData) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*RespAdminPermissionBindMenuData) ProtoMessage() {}

func (x *RespAdminPermissionBindMenuData) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[17]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use RespAdminPermissionBindMenuData.ProtoReflect.Descriptor instead.
func (*RespAdminPermissionBindMenuData) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{17}
}

// //////////////////////////////////
// 权限列表
type PermissionListItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                //权限ID
	MenuId        int32                  `protobuf:"varint,2,opt,name=menuId,proto3" json:"menuId,omitempty"`        //权限对应的菜单ID
	MenuName      string                 `protobuf:"bytes,3,opt,name=menuName,proto3" json:"menuName,omitempty"`     //菜单名称
	MenuPath      string                 `protobuf:"bytes,4,opt,name=menuPath,proto3" json:"menuPath,omitempty"`     //菜单路由
	Apis          []*AdminApiItem        `protobuf:"bytes,5,rep,name=apis,proto3" json:"apis,omitempty"`             //接口列表
	Key           string                 `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`               //权限唯一标识符
	Name          string                 `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`             //权限名称
	Describe      string                 `protobuf:"bytes,8,opt,name=describe,proto3" json:"describe,omitempty"`     //权限描述
	Type          string                 `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`             //权限类型
	TypeText      string                 `protobuf:"bytes,10,opt,name=typeText,proto3" json:"typeText,omitempty"`    //权限类型
	IsEnabled     bool                   `protobuf:"varint,11,opt,name=isEnabled,proto3" json:"isEnabled,omitempty"` //是否启用
	CreatedAt     string                 `protobuf:"bytes,12,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,13,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionListItem) Reset() {
	*x = PermissionListItem{}
	mi := &file_admin_permission_proto_msgTypes[18]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionListItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionListItem) ProtoMessage() {}

func (x *PermissionListItem) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[18]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionListItem.ProtoReflect.Descriptor instead.
func (*PermissionListItem) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{18}
}

func (x *PermissionListItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PermissionListItem) GetMenuId() int32 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *PermissionListItem) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *PermissionListItem) GetMenuPath() string {
	if x != nil {
		return x.MenuPath
	}
	return ""
}

func (x *PermissionListItem) GetApis() []*AdminApiItem {
	if x != nil {
		return x.Apis
	}
	return nil
}

func (x *PermissionListItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PermissionListItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PermissionListItem) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *PermissionListItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PermissionListItem) GetTypeText() string {
	if x != nil {
		return x.TypeText
	}
	return ""
}

func (x *PermissionListItem) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *PermissionListItem) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *PermissionListItem) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

// 权限接口列表
type PermissionApiItem struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`            //权限ID
	MenuId        int32                  `protobuf:"varint,2,opt,name=menuId,proto3" json:"menuId,omitempty"`    //菜单ID
	Key           string                 `protobuf:"bytes,3,opt,name=key,proto3" json:"key,omitempty"`           //权限键名
	Type          string                 `protobuf:"bytes,4,opt,name=type,proto3" json:"type,omitempty"`         //权限类型
	TypeText      string                 `protobuf:"bytes,5,opt,name=typeText,proto3" json:"typeText,omitempty"` //权限类型
	Name          string                 `protobuf:"bytes,6,opt,name=name,proto3" json:"name,omitempty"`         //权限名称
	Apis          []*AdminApiItem        `protobuf:"bytes,7,rep,name=apis,proto3" json:"apis,omitempty"`         //接口列表
	Enabled       bool                   `protobuf:"varint,8,opt,name=enabled,proto3" json:"enabled,omitempty"`  //是否启用
	Describe      string                 `protobuf:"bytes,9,opt,name=describe,proto3" json:"describe,omitempty"` //权限描述
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *PermissionApiItem) Reset() {
	*x = PermissionApiItem{}
	mi := &file_admin_permission_proto_msgTypes[19]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *PermissionApiItem) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*PermissionApiItem) ProtoMessage() {}

func (x *PermissionApiItem) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[19]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use PermissionApiItem.ProtoReflect.Descriptor instead.
func (*PermissionApiItem) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{19}
}

func (x *PermissionApiItem) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *PermissionApiItem) GetMenuId() int32 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *PermissionApiItem) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *PermissionApiItem) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *PermissionApiItem) GetTypeText() string {
	if x != nil {
		return x.TypeText
	}
	return ""
}

func (x *PermissionApiItem) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *PermissionApiItem) GetApis() []*AdminApiItem {
	if x != nil {
		return x.Apis
	}
	return nil
}

func (x *PermissionApiItem) GetEnabled() bool {
	if x != nil {
		return x.Enabled
	}
	return false
}

func (x *PermissionApiItem) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

// 权限详情
type AdminPermissionInfo struct {
	state         protoimpl.MessageState `protogen:"open.v1"`
	Id            int32                  `protobuf:"varint,1,opt,name=id,proto3" json:"id,omitempty"`                //权限ID
	MenuId        int32                  `protobuf:"varint,2,opt,name=menuId,proto3" json:"menuId,omitempty"`        //权限对应的菜单ID
	MenuName      string                 `protobuf:"bytes,3,opt,name=menuName,proto3" json:"menuName,omitempty"`     //菜单名称
	MenuPath      string                 `protobuf:"bytes,4,opt,name=menuPath,proto3" json:"menuPath,omitempty"`     //菜单路由
	Apis          []*AdminApiItem        `protobuf:"bytes,5,rep,name=apis,proto3" json:"apis,omitempty"`             //接口列表
	Key           string                 `protobuf:"bytes,6,opt,name=key,proto3" json:"key,omitempty"`               //权限唯一标识符
	Name          string                 `protobuf:"bytes,7,opt,name=name,proto3" json:"name,omitempty"`             //权限名称
	Describe      string                 `protobuf:"bytes,8,opt,name=describe,proto3" json:"describe,omitempty"`     //权限描述
	Type          string                 `protobuf:"bytes,9,opt,name=type,proto3" json:"type,omitempty"`             //权限类型
	TypeText      string                 `protobuf:"bytes,10,opt,name=typeText,proto3" json:"typeText,omitempty"`    //权限类型
	Redirect      string                 `protobuf:"bytes,11,opt,name=redirect,proto3" json:"redirect,omitempty"`    //重定向地址
	IsEnabled     bool                   `protobuf:"varint,12,opt,name=isEnabled,proto3" json:"isEnabled,omitempty"` //是否启用
	CreatedAt     string                 `protobuf:"bytes,13,opt,name=createdAt,proto3" json:"createdAt,omitempty"`
	UpdatedAt     string                 `protobuf:"bytes,14,opt,name=updatedAt,proto3" json:"updatedAt,omitempty"`
	unknownFields protoimpl.UnknownFields
	sizeCache     protoimpl.SizeCache
}

func (x *AdminPermissionInfo) Reset() {
	*x = AdminPermissionInfo{}
	mi := &file_admin_permission_proto_msgTypes[20]
	ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
	ms.StoreMessageInfo(mi)
}

func (x *AdminPermissionInfo) String() string {
	return protoimpl.X.MessageStringOf(x)
}

func (*AdminPermissionInfo) ProtoMessage() {}

func (x *AdminPermissionInfo) ProtoReflect() protoreflect.Message {
	mi := &file_admin_permission_proto_msgTypes[20]
	if x != nil {
		ms := protoimpl.X.MessageStateOf(protoimpl.Pointer(x))
		if ms.LoadMessageInfo() == nil {
			ms.StoreMessageInfo(mi)
		}
		return ms
	}
	return mi.MessageOf(x)
}

// Deprecated: Use AdminPermissionInfo.ProtoReflect.Descriptor instead.
func (*AdminPermissionInfo) Descriptor() ([]byte, []int) {
	return file_admin_permission_proto_rawDescGZIP(), []int{20}
}

func (x *AdminPermissionInfo) GetId() int32 {
	if x != nil {
		return x.Id
	}
	return 0
}

func (x *AdminPermissionInfo) GetMenuId() int32 {
	if x != nil {
		return x.MenuId
	}
	return 0
}

func (x *AdminPermissionInfo) GetMenuName() string {
	if x != nil {
		return x.MenuName
	}
	return ""
}

func (x *AdminPermissionInfo) GetMenuPath() string {
	if x != nil {
		return x.MenuPath
	}
	return ""
}

func (x *AdminPermissionInfo) GetApis() []*AdminApiItem {
	if x != nil {
		return x.Apis
	}
	return nil
}

func (x *AdminPermissionInfo) GetKey() string {
	if x != nil {
		return x.Key
	}
	return ""
}

func (x *AdminPermissionInfo) GetName() string {
	if x != nil {
		return x.Name
	}
	return ""
}

func (x *AdminPermissionInfo) GetDescribe() string {
	if x != nil {
		return x.Describe
	}
	return ""
}

func (x *AdminPermissionInfo) GetType() string {
	if x != nil {
		return x.Type
	}
	return ""
}

func (x *AdminPermissionInfo) GetTypeText() string {
	if x != nil {
		return x.TypeText
	}
	return ""
}

func (x *AdminPermissionInfo) GetRedirect() string {
	if x != nil {
		return x.Redirect
	}
	return ""
}

func (x *AdminPermissionInfo) GetIsEnabled() bool {
	if x != nil {
		return x.IsEnabled
	}
	return false
}

func (x *AdminPermissionInfo) GetCreatedAt() string {
	if x != nil {
		return x.CreatedAt
	}
	return ""
}

func (x *AdminPermissionInfo) GetUpdatedAt() string {
	if x != nil {
		return x.UpdatedAt
	}
	return ""
}

var File_admin_permission_proto protoreflect.FileDescriptor

var file_admin_permission_proto_rawDesc = []byte{
	0x0a, 0x16, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x12, 0x05, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x1a,
	0x0c, 0x63, 0x6f, 0x6d, 0x6d, 0x6f, 0x6e, 0x2e, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x22, 0x92, 0x01,
	0x0a, 0x16, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x12, 0x26, 0x0a, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x12, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52,
	0x65, 0x71, 0x4c, 0x69, 0x73, 0x74, 0x42, 0x61, 0x73, 0x65, 0x52, 0x04, 0x62, 0x61, 0x73, 0x65,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x12,
	0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x22, 0x62, 0x0a, 0x1b, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50,
	0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x44, 0x61, 0x74,
	0x61, 0x12, 0x14, 0x0a, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x18, 0x01, 0x20, 0x01, 0x28, 0x03,
	0x52, 0x05, 0x74, 0x6f, 0x74, 0x61, 0x6c, 0x12, 0x2d, 0x0a, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x18,
	0x02, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x19, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c, 0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d,
	0x52, 0x04, 0x6c, 0x69, 0x73, 0x74, 0x22, 0xcb, 0x01, 0x0a, 0x15, 0x52, 0x65, 0x71, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18,
	0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61,
	0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18, 0x05, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79,
	0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a,
	0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e,
	0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x22, 0x1c, 0x0a, 0x1a, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69,
	0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64, 0x44, 0x61,
	0x74, 0x61, 0x22, 0x28, 0x0a, 0x16, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65,
	0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02,
	0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x22, 0x4d, 0x0a, 0x1b,
	0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x44, 0x61, 0x74, 0x61, 0x12, 0x2e, 0x0a, 0x04, 0x64,
	0x61, 0x74, 0x61, 0x18, 0x01, 0x20, 0x01, 0x28, 0x0b, 0x32, 0x1a, 0x2e, 0x61, 0x64, 0x6d, 0x69,
	0x6e, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x52, 0x04, 0x64, 0x61, 0x74, 0x61, 0x22, 0xcc, 0x01, 0x0a, 0x16,
	0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x45, 0x64, 0x69, 0x74, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64,
	0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x10,
	0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79,
	0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x18, 0x05, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65,
	0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x18, 0x07, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74,
	0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x22, 0x1d, 0x0a, 0x1b, 0x52, 0x65,
	0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x45, 0x64, 0x69, 0x74, 0x44, 0x61, 0x74, 0x61, 0x22, 0x48, 0x0a, 0x18, 0x52, 0x65, 0x71,
	0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45,
	0x6e, 0x61, 0x62, 0x6c, 0x65, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28,
	0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c,
	0x65, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x22, 0x1f, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65,
	0x44, 0x61, 0x74, 0x61, 0x22, 0x2a, 0x0a, 0x18, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e,
	0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65,
	0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64,
	0x22, 0x1f, 0x0a, 0x1d, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x44, 0x65, 0x6c, 0x65, 0x74, 0x65, 0x44, 0x61, 0x74,
	0x61, 0x22, 0x58, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72,
	0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x73, 0x12,
	0x22, 0x0a, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f,
	0x6e, 0x49, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x61, 0x70, 0x69, 0x49, 0x64, 0x73, 0x18, 0x02, 0x20,
	0x03, 0x28, 0x05, 0x52, 0x06, 0x61, 0x70, 0x69, 0x49, 0x64, 0x73, 0x22, 0x21, 0x0a, 0x1f, 0x52,
	0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69,
	0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x73, 0x44, 0x61, 0x74, 0x61, 0x22, 0x57,
	0x0a, 0x1b, 0x52, 0x65, 0x71, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x12, 0x22, 0x0a,
	0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x0c, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x49,
	0x64, 0x12, 0x14, 0x0a, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05,
	0x52, 0x05, 0x61, 0x70, 0x69, 0x49, 0x64, 0x22, 0x1e, 0x0a, 0x1c, 0x52, 0x65, 0x73, 0x70, 0x41,
	0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x55, 0x6e,
	0x42, 0x69, 0x6e, 0x64, 0x41, 0x70, 0x69, 0x22, 0x74, 0x0a, 0x1a, 0x52, 0x65, 0x71, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e,
	0x64, 0x4d, 0x65, 0x6e, 0x75, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18,
	0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x3e, 0x0a,
	0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x18, 0x02, 0x20, 0x03,
	0x28, 0x0b, 0x32, 0x1c, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x52, 0x65, 0x71, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x64, 0x64,
	0x52, 0x0b, 0x70, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x73, 0x22, 0x21, 0x0a,
	0x1f, 0x52, 0x65, 0x73, 0x70, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73,
	0x73, 0x69, 0x6f, 0x6e, 0x42, 0x69, 0x6e, 0x64, 0x4d, 0x65, 0x6e, 0x75, 0x44, 0x61, 0x74, 0x61,
	0x22, 0xe9, 0x02, 0x0a, 0x12, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x4c,
	0x69, 0x73, 0x74, 0x49, 0x74, 0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x65, 0x6e, 0x75, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x65, 0x6e, 0x75, 0x50, 0x61, 0x74, 0x68, 0x12, 0x27, 0x0a, 0x04, 0x61, 0x70, 0x69, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x41, 0x70, 0x69, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x61, 0x70, 0x69, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18,
	0x0b, 0x20, 0x01, 0x28, 0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64,
	0x12, 0x1c, 0x0a, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0c, 0x20,
	0x01, 0x28, 0x09, 0x52, 0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x09, 0x75, 0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x22, 0xf0, 0x01, 0x0a,
	0x11, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73, 0x69, 0x6f, 0x6e, 0x41, 0x70, 0x69, 0x49, 0x74,
	0x65, 0x6d, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20, 0x01, 0x28, 0x05, 0x52, 0x02,
	0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x18, 0x02, 0x20, 0x01,
	0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65,
	0x79, 0x18, 0x03, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b, 0x65, 0x79, 0x12, 0x12, 0x0a, 0x04,
	0x74, 0x79, 0x70, 0x65, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x74, 0x79, 0x70, 0x65,
	0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x54, 0x65, 0x78, 0x74, 0x18, 0x05, 0x20, 0x01,
	0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x54, 0x65, 0x78, 0x74, 0x12, 0x12, 0x0a, 0x04,
	0x6e, 0x61, 0x6d, 0x65, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65,
	0x12, 0x27, 0x0a, 0x04, 0x61, 0x70, 0x69, 0x73, 0x18, 0x07, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13,
	0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x41, 0x70, 0x69, 0x49,
	0x74, 0x65, 0x6d, 0x52, 0x04, 0x61, 0x70, 0x69, 0x73, 0x12, 0x18, 0x0a, 0x07, 0x65, 0x6e, 0x61,
	0x62, 0x6c, 0x65, 0x64, 0x18, 0x08, 0x20, 0x01, 0x28, 0x08, 0x52, 0x07, 0x65, 0x6e, 0x61, 0x62,
	0x6c, 0x65, 0x64, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x18,
	0x09, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69, 0x62, 0x65, 0x22,
	0x86, 0x03, 0x0a, 0x13, 0x41, 0x64, 0x6d, 0x69, 0x6e, 0x50, 0x65, 0x72, 0x6d, 0x69, 0x73, 0x73,
	0x69, 0x6f, 0x6e, 0x49, 0x6e, 0x66, 0x6f, 0x12, 0x0e, 0x0a, 0x02, 0x69, 0x64, 0x18, 0x01, 0x20,
	0x01, 0x28, 0x05, 0x52, 0x02, 0x69, 0x64, 0x12, 0x16, 0x0a, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49,
	0x64, 0x18, 0x02, 0x20, 0x01, 0x28, 0x05, 0x52, 0x06, 0x6d, 0x65, 0x6e, 0x75, 0x49, 0x64, 0x12,
	0x1a, 0x0a, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x18, 0x03, 0x20, 0x01, 0x28,
	0x09, 0x52, 0x08, 0x6d, 0x65, 0x6e, 0x75, 0x4e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x6d,
	0x65, 0x6e, 0x75, 0x50, 0x61, 0x74, 0x68, 0x18, 0x04, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x6d,
	0x65, 0x6e, 0x75, 0x50, 0x61, 0x74, 0x68, 0x12, 0x27, 0x0a, 0x04, 0x61, 0x70, 0x69, 0x73, 0x18,
	0x05, 0x20, 0x03, 0x28, 0x0b, 0x32, 0x13, 0x2e, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x2e, 0x41, 0x64,
	0x6d, 0x69, 0x6e, 0x41, 0x70, 0x69, 0x49, 0x74, 0x65, 0x6d, 0x52, 0x04, 0x61, 0x70, 0x69, 0x73,
	0x12, 0x10, 0x0a, 0x03, 0x6b, 0x65, 0x79, 0x18, 0x06, 0x20, 0x01, 0x28, 0x09, 0x52, 0x03, 0x6b,
	0x65, 0x79, 0x12, 0x12, 0x0a, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x18, 0x07, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x6e, 0x61, 0x6d, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x18, 0x08, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x64, 0x65, 0x73, 0x63, 0x72, 0x69,
	0x62, 0x65, 0x12, 0x12, 0x0a, 0x04, 0x74, 0x79, 0x70, 0x65, 0x18, 0x09, 0x20, 0x01, 0x28, 0x09,
	0x52, 0x04, 0x74, 0x79, 0x70, 0x65, 0x12, 0x1a, 0x0a, 0x08, 0x74, 0x79, 0x70, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x18, 0x0a, 0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x74, 0x79, 0x70, 0x65, 0x54, 0x65,
	0x78, 0x74, 0x12, 0x1a, 0x0a, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x18, 0x0b,
	0x20, 0x01, 0x28, 0x09, 0x52, 0x08, 0x72, 0x65, 0x64, 0x69, 0x72, 0x65, 0x63, 0x74, 0x12, 0x1c,
	0x0a, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x18, 0x0c, 0x20, 0x01, 0x28,
	0x08, 0x52, 0x09, 0x69, 0x73, 0x45, 0x6e, 0x61, 0x62, 0x6c, 0x65, 0x64, 0x12, 0x1c, 0x0a, 0x09,
	0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0d, 0x20, 0x01, 0x28, 0x09, 0x52,
	0x09, 0x63, 0x72, 0x65, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x12, 0x1c, 0x0a, 0x09, 0x75, 0x70,
	0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x18, 0x0e, 0x20, 0x01, 0x28, 0x09, 0x52, 0x09, 0x75,
	0x70, 0x64, 0x61, 0x74, 0x65, 0x64, 0x41, 0x74, 0x42, 0x1b, 0x5a, 0x19, 0x2e, 0x2f, 0x61, 0x64,
	0x6d, 0x69, 0x6e, 0x5f, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x3b, 0x61, 0x64, 0x6d, 0x69, 0x6e, 0x5f,
	0x70, 0x72, 0x6f, 0x74, 0x6f, 0x62, 0x06, 0x70, 0x72, 0x6f, 0x74, 0x6f, 0x33,
}

var (
	file_admin_permission_proto_rawDescOnce sync.Once
	file_admin_permission_proto_rawDescData = file_admin_permission_proto_rawDesc
)

func file_admin_permission_proto_rawDescGZIP() []byte {
	file_admin_permission_proto_rawDescOnce.Do(func() {
		file_admin_permission_proto_rawDescData = protoimpl.X.CompressGZIP(file_admin_permission_proto_rawDescData)
	})
	return file_admin_permission_proto_rawDescData
}

var file_admin_permission_proto_msgTypes = make([]protoimpl.MessageInfo, 21)
var file_admin_permission_proto_goTypes = []any{
	(*ReqAdminPermissionList)(nil),          // 0: admin.ReqAdminPermissionList
	(*RespAdminPermissionListData)(nil),     // 1: admin.RespAdminPermissionListData
	(*ReqAdminPermissionAdd)(nil),           // 2: admin.ReqAdminPermissionAdd
	(*RespAdminPermissionAddData)(nil),      // 3: admin.RespAdminPermissionAddData
	(*ReqAdminPermissionInfo)(nil),          // 4: admin.ReqAdminPermissionInfo
	(*RespAdminPermissionInfoData)(nil),     // 5: admin.RespAdminPermissionInfoData
	(*ReqAdminPermissionEdit)(nil),          // 6: admin.ReqAdminPermissionEdit
	(*RespAdminPermissionEditData)(nil),     // 7: admin.RespAdminPermissionEditData
	(*ReqAdminPermissionEnable)(nil),        // 8: admin.ReqAdminPermissionEnable
	(*RespAdminPermissionEnableData)(nil),   // 9: admin.RespAdminPermissionEnableData
	(*ReqAdminPermissionDelete)(nil),        // 10: admin.ReqAdminPermissionDelete
	(*RespAdminPermissionDeleteData)(nil),   // 11: admin.RespAdminPermissionDeleteData
	(*ReqAdminPermissionBindApis)(nil),      // 12: admin.ReqAdminPermissionBindApis
	(*RespAdminPermissionBindApisData)(nil), // 13: admin.RespAdminPermissionBindApisData
	(*ReqAdminPermissionUnBindApi)(nil),     // 14: admin.ReqAdminPermissionUnBindApi
	(*RespAdminPermissionUnBindApi)(nil),    // 15: admin.RespAdminPermissionUnBindApi
	(*ReqAdminPermissionBindMenu)(nil),      // 16: admin.ReqAdminPermissionBindMenu
	(*RespAdminPermissionBindMenuData)(nil), // 17: admin.RespAdminPermissionBindMenuData
	(*PermissionListItem)(nil),              // 18: admin.PermissionListItem
	(*PermissionApiItem)(nil),               // 19: admin.PermissionApiItem
	(*AdminPermissionInfo)(nil),             // 20: admin.AdminPermissionInfo
	(*ReqListBase)(nil),                     // 21: admin.ReqListBase
	(*AdminApiItem)(nil),                    // 22: admin.AdminApiItem
}
var file_admin_permission_proto_depIdxs = []int32{
	21, // 0: admin.ReqAdminPermissionList.base:type_name -> admin.ReqListBase
	18, // 1: admin.RespAdminPermissionListData.list:type_name -> admin.PermissionListItem
	20, // 2: admin.RespAdminPermissionInfoData.data:type_name -> admin.AdminPermissionInfo
	2,  // 3: admin.ReqAdminPermissionBindMenu.permissions:type_name -> admin.ReqAdminPermissionAdd
	22, // 4: admin.PermissionListItem.apis:type_name -> admin.AdminApiItem
	22, // 5: admin.PermissionApiItem.apis:type_name -> admin.AdminApiItem
	22, // 6: admin.AdminPermissionInfo.apis:type_name -> admin.AdminApiItem
	7,  // [7:7] is the sub-list for method output_type
	7,  // [7:7] is the sub-list for method input_type
	7,  // [7:7] is the sub-list for extension type_name
	7,  // [7:7] is the sub-list for extension extendee
	0,  // [0:7] is the sub-list for field type_name
}

func init() { file_admin_permission_proto_init() }
func file_admin_permission_proto_init() {
	if File_admin_permission_proto != nil {
		return
	}
	file_common_proto_init()
	type x struct{}
	out := protoimpl.TypeBuilder{
		File: protoimpl.DescBuilder{
			GoPackagePath: reflect.TypeOf(x{}).PkgPath(),
			RawDescriptor: file_admin_permission_proto_rawDesc,
			NumEnums:      0,
			NumMessages:   21,
			NumExtensions: 0,
			NumServices:   0,
		},
		GoTypes:           file_admin_permission_proto_goTypes,
		DependencyIndexes: file_admin_permission_proto_depIdxs,
		MessageInfos:      file_admin_permission_proto_msgTypes,
	}.Build()
	File_admin_permission_proto = out.File
	file_admin_permission_proto_rawDesc = nil
	file_admin_permission_proto_goTypes = nil
	file_admin_permission_proto_depIdxs = nil
}
